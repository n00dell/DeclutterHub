@model IEnumerable<DeclutterHub.Models.Item>
@using Newtonsoft.Json

@{
    ViewData["Title"] = "Sales Report";
    Layout = "/Areas/Admin/Views/Shared/_PdfLayout.cshtml"; // PDF Layout
}
<div class="container">
    <h1>Sales Dashboard</h1>

    <!-- Display Total Listings -->
    <div class="row mb-3">
        <div class="col-md-6">
            <h3>Total Listings: @ViewBag.TotalListings</h3>
        </div>
        <div class="col-md-6 text-end">
            <button id="downloadPdf" asp-action="DownloadPdf" class="btn btn-primary">Download Chart as PDF</button>
        </div>
    </div>

    <!-- Sales Chart -->
    <div class="row">
        <div class="col-md-12">
            <canvas id="salesChart" width="400" height="200"></canvas>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script> <!-- Correct jsPDF version -->
    <script src="https://cdn.jsdelivr.net/npm/jspdf-autotable"></script>

    <script>
        // Retrieve Monthly Sales Data from ViewBag
        const monthlySalesData = @Html.Raw(JsonConvert.SerializeObject(ViewBag.MonthlySales));

        console.log('Monthly Sales Data:', monthlySalesData);

        let salesChart; // To reference the Chart.js instance

        // Check if there's any data
        if (!monthlySalesData || monthlySalesData.length === 0) {
            console.error("No sales data available to render chart.");
        } else {
            const labels = monthlySalesData.map(data => data.Month); // Months
            const salesCount = monthlySalesData.map(data => data.Count); // Number of Sales
            const salesValue = monthlySalesData.map(data => data.Value); // Sales Value

            // Chart.js configuration
            const ctx = document.getElementById('salesChart').getContext('2d');
            salesChart = new Chart(ctx, {
                type: 'line', // Choose line chart
                data: {
                    labels: labels,
                    datasets: [
                        {
                            label: 'Number of Sales',
                            data: salesCount,
                            borderColor: 'rgba(75, 192, 192, 1)',
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            fill: true,
                            tension: 0.4 // Smoother curves
                        },
                        {
                            label: 'Sales Value',
                            data: salesValue,
                            borderColor: 'rgba(255, 99, 132, 1)',
                            backgroundColor: 'rgba(255, 99, 132, 0.2)',
                            fill: true,
                            tension: 0.4
                        }
                    ]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top'
                        },
                        tooltip: {
                            callbacks: {
                                label: function (context) {
                                    // Format values nicely in the tooltip
                                    return context.dataset.label + ': ' +
                                           (context.dataset.label === 'Sales Value'
                                            ? `$${context.raw.toFixed(2)}`
                                            : context.raw);
                                }
                            }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Count / Value'
                            }
                        },
                        x: {
                            title: {
                                display: true,
                                text: 'Month'
                            }
                        }
                    }
                }
            });
        }

        // Download PDF functionality
        document.getElementById('downloadPdf').addEventListener('click', () => {
            // Ensure jsPDF is accessed correctly
            const { jsPDF } = window.jspdf; // Correctly access jsPDF from window.jspdf
            const pdf = new jsPDF({ orientation: 'landscape' }); // Create PDF in landscape mode

            // Add chart as an image to the PDF
            const chartCanvas = document.getElementById('salesChart');
            const chartImage = chartCanvas.toDataURL('image/png', 1.0); // Convert chart to image

            pdf.addImage(chartImage, 'PNG', 10, 10, 280, 150); // Adjust position and size in the PDF

            // Add a title
            pdf.setFontSize(16);
            pdf.text('Sales Chart', 140, 10, { align: 'center' });

            // Save the PDF
            pdf.save('SalesChart.pdf');
        });
    </script>
}

